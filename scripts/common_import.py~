#!/usr/bin/env python
# -*- coding: utf-8 -*-


#--------------------------------------------------
#ROS関係(import)
#--------------------------------------------------
import rospy

import tf

import smach
import smach_ros

import actionlib


#--------------------------------------------------
#ROS関係(from import)
#--------------------------------------------------
from cv_bridge import CvBridge

from move_base_msgs.msg import MoveBaseAction
from move_base_msgs.msg import MoveBaseGoal

from dev_smach_pkg.msg import SpeechRecAction
from dev_smach_pkg.msg import SpeechRecGoal
from dev_smach_pkg.msg import SpeechRecFeedback
from dev_smach_pkg.msg import SpeechRecResult

from common_pkg.msg import ObjRecAction
from common_pkg.msg import ObjRecGoal
from common_pkg.msg import ObjRecFeedback
from common_pkg.msg import ObjRecResult

from common_pkg.msg import CamLiftAction
from common_pkg.msg import CamLiftGoal
from common_pkg.msg import CamLiftFeedback
from common_pkg.msg import CamLiftResult

from common_pkg.msg import iARMAction
from common_pkg.msg import iARMGoal
from common_pkg.msg import iARMFeedback
from common_pkg.msg import iARMResult

from std_msgs.msg import String
from std_msgs.msg import Int64
from std_msgs.msg import Float64

from sensor_msgs.msg import Image
from sensor_msgs.msg import LaserScan
from sensor_msgs.msg import Joy

from nav_msgs.msg import Odometry

from geometry_msgs.msg import Twist
from geometry_msgs.msg import Pose
from geometry_msgs.msg import Point
from geometry_msgs.msg import euler
from geometry_msgs.msg import Quaternion

from tf.transformations import euler_from_quaternion
from tf.transformations import quaternion_from_euler


#--------------------------------------------------
#システム関係(import)
#--------------------------------------------------
import sys
import os
import time
import threading
import math
import socket

import pygame #ゲームパッドを使うためのライブラリ


#--------------------------------------------------
#システム関係(from import)
#--------------------------------------------------
from subprocess import call
from subprocess import Popen

from pygame.locals import * #pygame.localsの定数群を使うため


#音声#音声合成を現スレッドで起動(喋り終わるまで待つ)
#半角文字は英語、全角文字は日本語で喋ります。
#例: speech_single('This is English test message.これは日本語のテストメッセージです。')合成を現スレッドで起動(喋り終わるまで待つ)
def speech_single(speech_str):
    #if rospy.get_param('/param/dbg/speech/ssynlog') == 1:
        #rospy.loginfo(speech_str)
    #if rospy.get_param('/param/dbg/sm/flow') == 0:
        call(['rosrun', 'common_pkg', 'speech_syn.py', speech_str])


#音声合成を他スレッドで起動
#半角文字は英語、全角文字は日本語で喋ります。
#例: speech_muiti('This is English test message.これは日本語のテストメッセージです。')
def speech_multi(speech_str):
    #if rospy.get_param('/param/dbg/speech/ssynlog') == 1:
        #rospy.loginfo(speech_str)
    #if rospy.get_param('/param/dbg/sm/flow') == 0:
        Popen(['rosrun', 'common_pkg', 'speech_syn.py', speech_str])
