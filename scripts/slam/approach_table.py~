#!/usr/bin/env python
# -*- coding: utf-8 -*-


import rospy

from sensor_msgs.msg import LaserScan
from geometry_msgs.msg import Twist

import os
import sys

from subprocess import *


scan = LaserScan()
flag_start = 0


"""
#音声合成を現スレッドで起動(喋り終わるまで待つ)
#半角文字は英語、全角文字は日本語で喋ります
#例: speech_single('This is English test message.これは日本語のテストメッセージです。')
def speech_single(speech_str):
    if rospy.get_param('/param/dbg/speech/ssynlog') == 1:
        rospy.loginfo(speech_str)
    if rospy.get_param('/param/dbg/sm/flow') == 0:
        call(['rosrun', 'common_pkg', 'speech_syn.py', speech_str])


#音声合成を他スレッドで起動
#半角文字は英語、全角文字は日本語で喋ります
#例: SpeechMuiti('This is English test message.これは日本語のテストメッセージです。')
def speech_multi(speech_str):
    if rospy.get_param('/param/dbg/speech/ssynlog') == 1:
        rospy.loginfo(speech_str)
    if rospy.get_param('/param/dbg/sm/flow') == 0:
        Popen(['rosrun', 'common_pkg', 'speech_syn.py', speech_str])
"""


def subf_scan(sub_scan):
    global scan, flag_start
    scan = sub_scan
    flag_start = 1


if __name__ == '__main__':
    node_name = os.path.basename(__file__)
    node_name = node_name.split('.')
    rospy.init_node(node_name[0])

#    if rospy.get_param('/param/dbg/sm/flow') == 0 and rospy.get_param('/param/dbg/speech/onlyspeech') == 0:
#        while not rospy.is_shutdown():
#            break

    rospy.Subscriber("/scan", LaserScan, subf_scan)

    pub_cmd_vel = rospy.Publisher('/cmd_vel', Twist, queue_size = 1)
    cmd_vel = Twist()

    main_rate = rospy.Rate(10)
    while not rospy.is_shutdown():
        if flag_start == 1:
            print scan.ranges[int(len(scan.ranges) / 2)]
            if scan.ranges[int(len(scan.ranges) / 2)] > 0.6:
                cmd_vel.linear.x = 0.1
                cmd_vel.linear.y = 0
                cmd_vel.linear.z = 0
                cmd_vel.angular.x = 0
                cmd_vel.angular.y = 0
                cmd_vel.angular.z = 0
                pub_cmd_vel.publish(cmd_vel)
            else:
                cmd_vel.linear.x = 0
                cmd_vel.linear.y = 0
                cmd_vel.linear.z = 0
                cmd_vel.angular.x = 0
                cmd_vel.angular.y = 0
                cmd_vel.angular.z = 0
                print 'hoge'
                pub_cmd_vel.publish(cmd_vel)
                main_rate.sleep()
                pub_cmd_vel.publish(cmd_vel)
                main_rate.sleep()
                cmd_vel.linear.x = 0.1
                cmd_vel.linear.y = 0
                cmd_vel.linear.z = 0
                cmd_vel.angular.x = 0
                cmd_vel.angular.y = 0
                cmd_vel.angular.z = 0
                pub_cmd_vel.publish(cmd_vel)
                rospy.sleep(2)
                cmd_vel.linear.x = 0
                cmd_vel.linear.y = 0
                cmd_vel.linear.z = 0
                cmd_vel.angular.x = 0
                cmd_vel.angular.y = 0
                cmd_vel.angular.z = 0
                pub_cmd_vel.publish(cmd_vel)
                sys.exit()        

        main_rate.sleep()
